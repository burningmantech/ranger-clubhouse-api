#!/bin/sh
#
# Dispatcher for Travis CI
#

. "$(dirname "$0")/.common.sh";

travis_action="${1}"; shift;

echo "Docker configuration:";
docker info;

echo "Environment:";
env;

docker_cache_dir="${HOME}/docker_images";
docker_cache_file="${docker_cache_dir}/images.tgz";


cache_images() {
    mkdir -p "${docker_cache_dir}";

    find_images() {
        for name in "${@}"; do
            docker history -q "${name}" | grep -v "<missing>";
        done;
    }

    local images="$(find_images "${@}" | uniq)";

    echo "Caching Docker images: ${images}";
    docker save ${images} | gzip -9 > "${docker_cache_file}";
    docker image ls -a;
}


load_images() {
    if [ -f "${docker_cache_file}" ]; then
        echo "Loading Docker images from cache...";
        if ! docker load --input "${docker_cache_file}"; then
            echo "Cache load failed.";
        fi;
        docker image ls -a;
    else
        echo "No cached Docker image available.";
    fi;
}


case "${travis_action}" in

    "test")
        # Lint doesn't require a build and is a relatively quick check
        "${wd}/bin/test_lint" .;

        # Load cached docker images
        echo "Docker image cache contents:";
        ls -l "${docker_cache_dir}";
        load_images;

        # Build
        "${wd}/bin/build";

        # Run unit tests
        echo "Running unit tests...";
        "${wd}/bin/test_unit";

        # Run basic tests on the Docker container
        echo "Testing Docker image...";
        "${wd}/bin/test_docker";

        # Cache stable docker images for later use
        cache_images                  \
            "${php_image_name}"       \
            "${composer_image_name}"  \
            "${source_image_name}"    \
            "${build_image_name}"     \
            "${dev_image_name}"       \
            "${api_image_name}"       \
            ;
        ;;

    "deploy")
        if [ "${TRAVIS_PULL_REQUEST:-}" != "false" ]; then
            echo "No deploy from a pull request branch.";
            exit 1;
        fi;
        if [ "${TRAVIS_BRANCH}" != "master" ]; then
            echo "No deploy from non-master branch branch. Aborting.";
            exit 1;
        fi;

        # Load cached docker images
        load_images;

        "${wd}/bin/build";

        # Deploy
        "${wd}/bin/deploy" staging;
        ;;

    *)
        echo "Unknown Travis action: ${travis_action}";
        exit 1;
        ;;

esac;
