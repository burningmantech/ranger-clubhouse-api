#!/bin/sh
#
# Dispatcher for Travis CI
#

. "$(dirname "$0")/.common.sh";

travis_action="$1"; shift;

echo "Docker configuration:";
docker info;

echo "Environment:";
env;

docker_cache="${HOME}/docker_images";
cached_image="${docker_cache}/${TRAVIS_COMMIT}.tgz";

case "${travis_action}" in

    "test")
        # Lint doesn't require a build and is a relatively quick check
        "${wd}/bin/test_lint" .;

        # Build
        "${wd}/bin/build";

        # # Get Docker host IP, accessible from containers
        # docker_host_ip="$( \
        #     ip addr show docker0 | \
        #     sed -n 's|^.*inet \(.*\)/.*$|\1|p' \
        # )";
        # echo "Docker host IP: ${docker_host_ip}";

        export RANGER_DB_USER_NAME="travis";
        export RANGER_DB_PASSWORD="";
        # export RANGER_DB_HOST_NAME="${docker_host_ip}";
        export RANGER_DB_HOST_NAME="host.docker.internal";
        export RANGER_DB_PORT="3306";

        echo "Testing database host lookup:"
        docker run --rm "${image_name}" host "${RANGER_DB_HOST_NAME}";
        docker run --rm "${image_name}" ping "${RANGER_DB_HOST_NAME}";

        # Set up test database
        echo "Creating database...";
        mysql -e "create database rangers;";
        echo "Applying database schema...";
        docker run --rm \
            --env=RANGER_DB_USER_NAME="${RANGER_DB_USER_NAME}" \
            --env=RANGER_DB_PASSWORD="${RANGER_DB_PASSWORD}" \
            --env=RANGER_DB_HOST_NAME="${RANGER_DB_HOST_NAME}" \
            --env=RANGER_DB_PORT="${RANGER_DB_PORT}" \
            "${image_name}" \
            php artisan migrate:fresh --seed --force;

        # Run tests in Docker container
        echo "Testing Docker image...";
        "${wd}/bin/test_docker";

        # Cache docker image for later use
        echo "Caching Docker image...";
        mkdir -p "${docker_cache}";
        docker save "${image_name}" | gzip > "${cached_image}";
        ;;

    "deploy")
        # Use cached docker image or rebuild it
        if [ -f "${cached_image}" ]; then
            echo "Loading cached Docker image...";
            docker load < "${cached_image}";
        else
            echo "No cached Docker image; building...";
            echo "Caches:";
            ls -l "${docker_cache}" || true;
            "${wd}/bin/build";
        fi;
        # Deploy
        "${wd}/bin/deploy";
        ;;

    *)
        echo "Unknown Travis action: ${travis_action}";
        exit 1;
        ;;

esac;
