#!/bin/sh
#
# Deploy Docker image.
#

. "$(dirname "$0")/.common.sh";

# Provided by the CI environment:
# * AWS_DEFAULT_REGION
# * AWS_ACCESS_KEY_ID
# * AWS_SECRET_ACCESS_KEY
# * AWS_ECR_IMAGE_REPOSITORY

if [ $# -lt 1 ]; then
    echo "No target specified.";
    exit 64;  # EX_USAGE
fi;

target="$1"; shift;

# if [ "${target}" = "staging" ]; then
#     if [ "${TRAVIS:-}" != "true" ]; then
#         echo "No deployments to staging outside of Travis CI.";
#         exit 78;  # EX_CONFIG
#     fi;
#     if [ "${TRAVIS_PULL_REQUEST:-}" != "false" ]; then
#         echo "No deployments allowed from a pull request.";
#         exit 78;  # EX_CONFIG
#     fi;
#     if [ "${TRAVIS_BRANCH:-}" != "master" ]; then
#         echo "No deployments allowed from non-master branches.";
#         exit 78;  # EX_CONFIG
#     fi;
# fi;

if ! type python3 > /dev/null 2>&1; then
    echo "Python 3 is required.";
    exit 72;  # EX_OSFILE
fi;
if ! type docker > /dev/null 2>&1; then
    echo "Docker is required.";
    exit 72;  # EX_OSFILE
fi;
if [ -n "${VIRTUAL_ENV:-}" ]; then
    # Already in a virtual environment
    virtualenv="";
    python="python3";
else
    # Make a virtual environment
    virtualenv="$(mktemp -d)";
    python3 -m venv "${virtualenv}";
    python="${virtualenv}/bin/python";
fi;

echo "Installing dependencies...";
"${python}" -m pip install --disable-pip-version-check --quiet awscli;
"${python}" -m pip install --disable-pip-version-check --quiet \
    "git+https://github.com/burningmantech/ranger-deploy";

export    AWS_ECS_CLUSTER_STAGING="rangers";
export    AWS_ECS_SERVICE_STAGING="ranger-clubhouse-api-staging-fg";
export AWS_ECS_CLUSTER_PRODUCTION="rangers";
export AWS_ECS_SERVICE_PRODUCTION="ranger-clubhouse-api-production-fg";

docker --version;

echo "Logging into AWS...";
$("${python}" -m awscli ecr get-login --no-include-email);

if [ "${target}" = "staging" ]; then
    tag="$(git rev-parse --short "${TRAVIS_COMMIT}")";
    export AWS_ECR_IMAGE_NAME="${AWS_ECR_IMAGE_REPOSITORY}:${tag}";

    echo "Tagging image for AWS ECR...";
    docker tag "${image_name}" "${AWS_ECR_IMAGE_NAME}";

    echo "Pushing image to AWS ECR...";
    docker push "${AWS_ECR_IMAGE_NAME}";
fi;

"${python}" -m deploy.aws.ecs "${target}" --trial;

if [ "${target}" = "staging" ]; then
    "${python}" -m deploy.notify.smtp staging          \
        --project-name="Ranger Clubhouse API Service"  \
        --project-name="TOOL IS DOING SOME TESTING YO" \
        --repository-id="${TRAVIS_REPO_SLUG}"          \
        --build-number="${TRAVIS_BUILD_NUMBER}"        \
        --build-url="${TRAVIS_BUILD_WEB_URL}"          \
        --commit-id="${TRAVIS_COMMIT}"                 \
        --commit-message="${TRAVIS_COMMIT_MESSAGE}"    \
        --smtp-host="${NOTIFY_SMTP_HOST}"              \
        --smtp-port="${NOTIFY_SMTP_PORT}"              \
        --smtp-user="${NOTIFY_SMTP_USER}"              \
        --smtp-password="${NOTIFY_SMTP_PASSWORD}"      \
        --sender="${NOTIFY_EMAIL_SENDER}"              \
        --recipient="${NOTIFY_EMAIL_RECIPIENT}"        \
        ;
fi;

if [ -n "${virtualenv}" ]; then
    rm -rf "${virtualenv}";
fi;
